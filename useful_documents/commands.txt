git init & git clone to create new repositories
git clone "link" name to get a repository and save it in some directory
git status to review repos
HEAD points to the active branch 

git log to review past commits
git show to review last commit
git log --decorate flag to obtain more information
git log --oneline --graph --decorate --all very specific log
git shortlog displays an alphabetical list of names and the commit messages that go along with them
git log --grep "keyword" searches for text within commit messages
git log --stat shows changes in a file
git log -p shows the actual changes in a file

git add to stage the commit
git commit to commit them to the repo
git commit --amend to undo the most recent commit or to change the wording of the commit message
git diff show changes that you have not yet committed
git pull to fetch changes from the repository
git push to push changes into the repository
git fetch only changes the local repository in case the local and remote have different changes (need to merge after)

git tag -a v1.0 add a marker on the most recent commit
git branch will list all the branches need to perform fetch
git branch "branch_name" "commit" creates a branch and assigns the status of that commit
git checkout switches you to another branch

git merge "branch_name" to merge the current branch with another one
$ git rebase -i <base> rebase the commits to the one that's "n" before the one we're on


git revert will undo the changes that were made by the provided commit and creates a new commit to record the change
git reset will reset the status of the repo but it depends on the flag
--mixed takes the changes and moves them to the working directory
--soft takes the changes and moves them to the staging area
--hard takes the changes and moves them to trash

git remote add "name" "url" to add a connection to the remote repository
git remote -v is used to see the details about a connection to a remote
git remote rename "old_name" "new_name" to rename a repository


Why would you want to have multiple remote repositories?
If you are working with multiple developers then you might want to get changes they're working on in their branch(es) into your project
before they merge them into the master branch. You might want to do this if you want to test out their change before you decide to implement
your changes.
